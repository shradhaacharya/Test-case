

def get_nested_value(obj, key):
    keys = key.split('/')  # Split the key into a list of individual keys
    current_obj = obj  # Initialize the current object as the root object

    for k in keys:
        if k in current_obj:
            current_obj = current_obj[k]  # Update the current object to the nested object
        else:
            return None  # Key not found in the object

    return current_obj  # Return the final value when the key is found

# Example usage:
object1 = {"a": {"b": {"c": "d"}}}
key1 = "a/b/c"
value1 = get_nested_value(object1, key1)
print(value1)  # Output: "d"

object2 = {"x": {"y": {"z": "a"}}}
key2 = "x/y/z"
value2 = get_nested_value(object2, key2)
print(value2)  # Output: "a"
